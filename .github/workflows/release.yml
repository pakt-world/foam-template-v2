name: Production Web Deployment

on:
  push:
    tags:
      - '**'

env:
  ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
  AWS_KEY: ${{ secrets.AWS_KEY }}
  AWS_SECRET: ${{ secrets.AWS_SECRET }}

jobs:
  build:
    name: Build and Push Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.tag }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          docker build --build-arg PORT=9090 -f ./.deploy/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$RELEASE_VERSION .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$RELEASE_VERSION $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
      - name: Push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$RELEASE_VERSION
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
